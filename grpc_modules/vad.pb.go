// vad.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: proto/vad.proto

package vad_application

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Audio chunk containing raw audio data
type AudioChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AudioData     []byte                 `protobuf:"bytes,1,opt,name=audio_data,json=audioData,proto3" json:"audio_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AudioChunk) Reset() {
	*x = AudioChunk{}
	mi := &file_proto_vad_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AudioChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioChunk) ProtoMessage() {}

func (x *AudioChunk) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vad_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioChunk.ProtoReflect.Descriptor instead.
func (*AudioChunk) Descriptor() ([]byte, []int) {
	return file_proto_vad_proto_rawDescGZIP(), []int{0}
}

func (x *AudioChunk) GetAudioData() []byte {
	if x != nil {
		return x.AudioData
	}
	return nil
}

// VAD response with event type and message
type VADResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Event         string                 `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"` // "start", "continue", or "end"
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VADResponse) Reset() {
	*x = VADResponse{}
	mi := &file_proto_vad_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VADResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VADResponse) ProtoMessage() {}

func (x *VADResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vad_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VADResponse.ProtoReflect.Descriptor instead.
func (*VADResponse) Descriptor() ([]byte, []int) {
	return file_proto_vad_proto_rawDescGZIP(), []int{1}
}

func (x *VADResponse) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *VADResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Request to reset VAD state
type ResetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResetRequest) Reset() {
	*x = ResetRequest{}
	mi := &file_proto_vad_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetRequest) ProtoMessage() {}

func (x *ResetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vad_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetRequest.ProtoReflect.Descriptor instead.
func (*ResetRequest) Descriptor() ([]byte, []int) {
	return file_proto_vad_proto_rawDescGZIP(), []int{2}
}

// Response from reset request
type ResetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResetResponse) Reset() {
	*x = ResetResponse{}
	mi := &file_proto_vad_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetResponse) ProtoMessage() {}

func (x *ResetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vad_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetResponse.ProtoReflect.Descriptor instead.
func (*ResetResponse) Descriptor() ([]byte, []int) {
	return file_proto_vad_proto_rawDescGZIP(), []int{3}
}

func (x *ResetResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_proto_vad_proto protoreflect.FileDescriptor

const file_proto_vad_proto_rawDesc = "" +
	"\n" +
	"\x0fproto/vad.proto\x12\x03vad\"+\n" +
	"\n" +
	"AudioChunk\x12\x1d\n" +
	"\n" +
	"audio_data\x18\x01 \x01(\fR\taudioData\"=\n" +
	"\vVADResponse\x12\x14\n" +
	"\x05event\x18\x01 \x01(\tR\x05event\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x0e\n" +
	"\fResetRequest\")\n" +
	"\rResetResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess2v\n" +
	"\n" +
	"VADService\x125\n" +
	"\fProcessAudio\x12\x0f.vad.AudioChunk\x1a\x10.vad.VADResponse(\x010\x01\x121\n" +
	"\bResetVAD\x12\x11.vad.ResetRequest\x1a\x12.vad.ResetResponseB\x13Z\x11./vad_applicationb\x06proto3"

var (
	file_proto_vad_proto_rawDescOnce sync.Once
	file_proto_vad_proto_rawDescData []byte
)

func file_proto_vad_proto_rawDescGZIP() []byte {
	file_proto_vad_proto_rawDescOnce.Do(func() {
		file_proto_vad_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_vad_proto_rawDesc), len(file_proto_vad_proto_rawDesc)))
	})
	return file_proto_vad_proto_rawDescData
}

var file_proto_vad_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_vad_proto_goTypes = []any{
	(*AudioChunk)(nil),    // 0: vad.AudioChunk
	(*VADResponse)(nil),   // 1: vad.VADResponse
	(*ResetRequest)(nil),  // 2: vad.ResetRequest
	(*ResetResponse)(nil), // 3: vad.ResetResponse
}
var file_proto_vad_proto_depIdxs = []int32{
	0, // 0: vad.VADService.ProcessAudio:input_type -> vad.AudioChunk
	2, // 1: vad.VADService.ResetVAD:input_type -> vad.ResetRequest
	1, // 2: vad.VADService.ProcessAudio:output_type -> vad.VADResponse
	3, // 3: vad.VADService.ResetVAD:output_type -> vad.ResetResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_vad_proto_init() }
func file_proto_vad_proto_init() {
	if File_proto_vad_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_vad_proto_rawDesc), len(file_proto_vad_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_vad_proto_goTypes,
		DependencyIndexes: file_proto_vad_proto_depIdxs,
		MessageInfos:      file_proto_vad_proto_msgTypes,
	}.Build()
	File_proto_vad_proto = out.File
	file_proto_vad_proto_goTypes = nil
	file_proto_vad_proto_depIdxs = nil
}
